bool bbb;
int ret;
struct S{
    int a;
};

struct S t;
struct hello{
    int z;
    bool y;
};

void f(int p1, bool p2) {
}

int f1() {
    return ret(int);
}

bool f2() {
    return bbb(bool);
}

int function(int para, bool para2) {
    int local;
    bool flag;
    struct hello st;
    int term;
    cout << "test decls";
    flag(bool) = true;
    para(int) = (local(int) + term(int));
    para(int) = (local(int) - term(int));
    para(int) = (local(int) * term(int));
    para(int) = (local(int) / term(int));
    flag(bool) = (local(int) == term(int));
    flag(bool) = (local(int) != term(int));
    flag(bool) = (local(int) > term(int));
    flag(bool) = (local(int) < term(int));
    flag(bool) = (local(int) >= term(int));
    flag(bool) = (local(int) <= term(int));
    para(int) = (-local(int));
    para(int) = ((-local(int)) + term(int));
    para(int) = (local(int) - (-(local(int) / term(int))));
    para(int) = ((local(int) - ((local(int) * local(int)) / local(int))) + local(int));
    local(int) = ((local(int) + ((local(int) * local(int)) / local(int))) - local(int));
    local(int)++;
    term(int)--;
    st(hello).z(int) = 0;
    st(hello).y(bool) = true;
    if ((para(int) == local(int))) {
    }
    if (true) {
        int tstIfDecl;
        int tstIfDecl1;
        tstIfDecl(int) = tstIfDecl1(int);
    }
    if (false) {
        int testIfDecl;
        bool tstIfDeclBool;
    }
    if ((local(int) < term(int))) {
        bool tstIfElseDecl;
    }
    else {
        bool tstIfElseDecl;
    }
    while ((local(int) > term(int))) {
    }
    while ((local(int) <= term(int))) {
        int tstWhileDecl;
        bool tstWhileDeclBool;
        cin >> term(int);
    }
    while (true) {
    }
    while (false) {
        int tstRecursive;
        while (true) {
            cout << "second level";
            if (true) {
                term(int)++;
                cout << "should be stmts";
                local(int) = term(int);
            }
        }
    }
    cout << "test return";
    return (term(int) + local(int));
}

void main() {
    int aaa;
    while ((aaa(int) < 2)) {
        f(int,bool->void)(2, bbb(bool));
    }
    aaa(int) = (f1(->int)() + f1(->int)());
    bbb(bool) = f2(->bool)();
    f1(->int)();
    cout << f1(->int)();
    t(S).a(int) = 5;
    cout << t(S).a(int);
}

